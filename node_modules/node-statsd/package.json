{
  "name": "node-statsd",
  "description": "node client for Etsy'd StatsD server",
  "version": "0.0.7",
  "author": {
    "name": "Steve Ivy"
  },
  "contributors": [
    {
      "name": "Russ Bradberry",
      "email": "rbradberry@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/sivy/node-statsd.git"
  },
  "bugs": {
    "url": "https://github.com/sivy/node-statsd/issues"
  },
  "directories": {
    "lib": "./lib/"
  },
  "engines": {
    "node": ">=0.1.97"
  },
  "scripts": {
    "test": "node ./node_modules/mocha/bin/mocha -R spec"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "*"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/sivy/node-stats/raw/master/LICENSE"
    }
  ],
  "readme": "# node-statsd\n\nA node.js client for [Etsy](http://etsy.com)'s [StatsD](https://github.com/etsy/statsd) server.\n\nThis client will let you fire stats at your StatsD server from a node.js application.\n\nnode-statsd Runs and is tested on Node 0.6+ on all *nix platforms and 0.8+ on all platforms including Windows.\n\n[![Build Status](https://secure.travis-ci.org/sivy/node-statsd.png?branch=master)](http://travis-ci.org/sivy/node-statsd)\n\n## Installation\n\n```\n$ npm install node-statsd\n```\n\n## Usage\n\nAll initialization parameters are optional.\n\nParameters (specified as an options hash):\n* `host`:      The host to send stats to `default: localhost`\n* `port`:      The port to send stats to `default: 8125`\n* `prefix`:    What to prefix each stat name with `default: ''`\n* `suffix`:    What to suffix each stat name with `default: ''`\n* `globalize`: Expose this StatsD instance globally? `default: false`\n* `dnsCache`:  Cache the initial dns lookup to *host* `default: false`\n* `mock`:      Create a mock StatsD instance, sending no stats to the server? `default: false`\n\nAll StatsD methods have the same API:\n* `name`:       Stat name `required`\n* `value`:      Stat value `required except in increment/decrement where it defaults to 1/-1 respectively`\n* `sampleRate`: Sends only a sample of data to StatsD `default: 1`\n* `callback`:   The callback to execute once the metric has been sent\n\nIf an array is specified as the `name` parameter each item in that array will be sent along with the specified value.\n\n```javascript\n  var StatsD = require('node-statsd').StatsD,\n      client = new StatsD();\n\n  // Timing: sends a timing command with the specified milliseconds\n  client.timing('response_time', 42);\n\n  // Increment: Increments a stat by a value (default is 1)\n  client.increment('my_counter');\n\n  // Decrement: Decrements a stat by a value (default is -1)\n  client.decrement('my_counter');\n\n  // Gauge: Gauge a stat by a specified amount\n  client.gauge('my_gauge', 123.45);\n\n  // Set: Counts unique occurrences of a stat (alias of unique)\n  client.set('my_unique', 'foobar');\n  client.unique('my_unique', 'foobarbaz');\n\n  // Incrementing multiple items\n  client.increment(['these', 'are', 'different', 'stats']);\n\n  // Sampling, this will sample 25% of the time the StatsD Daemon will compensate for sampling\n  client.increment('my_counter', 1, 0.25);\n\n  // Using the callback\n  client.set(['foo', 'bar'], 42, null, function(error, bytes){\n    //this only gets called once after all messages have been sent\n    if(error){\n      console.error('Oh noes! There was an error:', error);\n    } else {\n      console.log('Successfully sent', bytes, 'bytes');\n    }\n  });\n```\n\n## Errors\n\nIn the event that there is a socket error, `node-statsd` will allow this error to bubble up.  If you would like to catch the errors, just attach a listener to the socket property on the instance.\n\n```javascript\nclient.socket.on('error', function(error) {\n  return console.error(\"Error in socket: \", error);\n});\n```\n\nIf you want to catch errors in sending a message then use the callback provided.\n\n## License\n\nnode-statsd is licensed under the MIT license.\n\n",
  "readmeFilename": "README.md",
  "_id": "node-statsd@0.0.7",
  "_from": "node-statsd@"
}
